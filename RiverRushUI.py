from PySide6 import QtWidgets, QtGui, QtCore
from shiboken6 import wrapInstance
import maya.OpenMayaUI as omui
import random
import os

# 1.‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MAYA
def maya_main_window():
    main_window_ptr = omui.MQtUtil.mainWindow()
    return wrapInstance(int(main_window_ptr), QtWidgets.QWidget)

# 2.‡∏´‡πâ‡∏≠‡∏á UI ‡∏´‡∏•‡∏±‡∏Å
class RiverRushUI(QtWidgets.QDialog):
    def __init__(self, parent=maya_main_window()):
        super().__init__(parent)

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏∑‡∏≠
        self.boat_speed = 20
        self.boat_x_start = 300
        self.boat_y_start = 600
        self.boat_x = self.boat_x_start
        self.boat_y = self.boat_y_start

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ç‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°
        self.obstacles = []  
        self.obstacle_speed = 3

        # --- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Path ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!) ---
        # <--- 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Path ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠
        self.IMAGE_DIR = "C:/Users/nadia/Documents/maya/2026/scripts/RiverRush/images"

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Timers 
        self.game_timer = QtCore.QTimer(self)
        self.game_timer.timeout.connect(self.update_game)

        self.spawn_timer = QtCore.QTimer(self)
        self.spawn_timer.timeout.connect(self.spawn_obstacle)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°
        self.setup_ui()

    def setup_ui(self):
        self.setWindowTitle("RIVER RUSH GAME ‚ù§Ô∏è")
        self.setFixedSize(700, 800)
        self.setFocusPolicy(QtCore.Qt.StrongFocus)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Layout ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ 
        self.stacked_layout = QtWidgets.QStackedLayout(self)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π (‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà 0) 
        self.menu_widget = self._create_menu_widget()
        self.stacked_layout.addWidget(self.menu_widget)

        # -‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏° (‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà 1) 
        self.game_widget = self._create_game_widget()
        self.stacked_layout.addWidget(self.game_widget)

        # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π
        self.stacked_layout.setCurrentWidget(self.menu_widget)

#--------------------------------------------------------------

    def _create_menu_widget(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π"""
        widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(widget)
        layout.setAlignment(QtCore.Qt.AlignCenter)

        # ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°
        title = QtWidgets.QLabel("üèûÔ∏è RIVER RUSH üõ∂")
        title.setAlignment(QtCore.Qt.AlignCenter)
        title.setStyleSheet("font-size: 50px; font-weight: bold; color: #2E8B57; margin-bottom: 20px;")
        layout.addWidget(title)

        # ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏≠‡∏≠‡∏Å‡πÄ‡∏Å‡∏°
        start_button = QtWidgets.QPushButton("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°")
        quit_button = QtWidgets.QPushButton("‡∏≠‡∏≠‡∏Å")

        start_button.clicked.connect(self.start_game)
        quit_button.clicked.connect(self.close)

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏≠‡∏≠‡∏Å‡πÄ‡∏Å‡∏°
        button_style_green = """
            QPushButton {
                background-color: #4CAF50; color: white; font-size: 30px; font-weight: bold; 
                border-radius: 15px; padding: 10px 25px; margin: 10px;
            }
            QPushButton:hover { background-color: #45a049; }
        """
        button_style_red = """
            QPushButton {
                background-color: #ff4d4d; color: white; font-size: 30px; font-weight: bold;
                border-radius: 15px; padding: 10px 25px; margin: 10px;
            }
            QPushButton:hover { background-color: #e63946; }
        """
        start_button.setStyleSheet(button_style_green)
        quit_button.setStyleSheet(button_style_red)

        layout.addWidget(start_button)
        layout.addWidget(quit_button)
        layout.addStretch()

        return widget

#--------------------------------------------------------------

    def _create_game_widget(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°"""
        widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(widget)
        layout.setContentsMargins(0,0,0,0)
        layout.setSpacing(0)

        # ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤
        info_layout = QtWidgets.QHBoxLayout()
        info_layout.setContentsMargins(10, 10, 10, 10)
        self.heart_label = QtWidgets.QLabel("‚ù§Ô∏è: 3")
        self.score_label = QtWidgets.QLabel("‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: 0")
        self.heart_label.setStyleSheet("color: #ff4d4d; font-size: 30px; font-weight: bold; background-color: #ffe6e6; border-radius: 15px; padding: 5px;")
        self.score_label.setStyleSheet("color: #0073e6; font-size: 30px; font-weight: bold; background-color: #e6f3ff; border-radius: 15px; padding: 5px;")
        info_layout.addWidget(self.heart_label)
        info_layout.addStretch()
        info_layout.addWidget(self.score_label)
        layout.addLayout(info_layout)

        # ‡∏û‡∏∑‡πâ‡∏ô‡∏ô‡πâ‡∏≥
        self.game_area = QtWidgets.QLabel()
        self.game_area.setFixedSize(700, 700)
        self.game_area.setStyleSheet("background-color: #4f94cb; border: 2px solid #0077cc;")
        layout.addWidget(self.game_area)

        # ‡πÄ‡∏£‡∏∑‡∏≠
        self.boat = QtWidgets.QLabel(self.game_area)
        self.boat.setFocusPolicy(QtCore.Qt.NoFocus)
        
        # <--- 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Path ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î ‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÉ‡∏ä‡πâ self.IMAGE_DIR
        # (‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏∑‡πà‡∏≠ ship.PNG ‡∏´‡∏£‡∏∑‡∏≠ ship.png)
        ship_image_path = os.path.join(self.IMAGE_DIR, "ship.PNG") 
        self.boat.setPixmap(QtGui.QPixmap(ship_image_path).scaled(100, 100, QtCore.Qt.KeepAspectRatio))
        self.boat.setGeometry(self.boat_x, self.boat_y, 100, 100)

        self.boat.setStyleSheet("outline: none; border: none;")


        return widget

#--------------------------------------------------------------

    def start_game(self):
        """‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°"""
        # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
        self.reset_game_state()

        # ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
        self.stacked_layout.setCurrentWidget(self.game_widget)
        self.setFocus() # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ

        # ‡πÄ‡∏£‡∏¥‡πà‡∏° Timer
        self.game_timer.start(30)  # 30 ms update rate
        self.spawn_timer.start(1000) # 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ spawn 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á

    def reset_game_state(self):
        """‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà"""
        # ‡∏´‡∏¢‡∏∏‡∏î Timer (‡∏ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà)
        self.game_timer.stop()
        self.spawn_timer.stop()

        # ‡∏•‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for obs in self.obstacles:
            obs.deleteLater()
        self.obstacles.clear()

        # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠
        self.boat_x = self.boat_x_start
        self.boat_y = self.boat_y_start
        self.boat.move(self.boat_x, self.boat_y)

        # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
        self.score = 0  # <--- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
        self.lives = 3
        self.obstacle_speed = 10 # <--- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ (‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà 10)

        # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
        self.score_label.setText(f"‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {self.score}")
        self.heart_label.setText(f"‚ù§Ô∏è: {self.lives}")

#--------------------------------------------------------------

    def update_game(self):
        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏ä‡πá‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏±‡∏ô
        for obs in self.obstacles[:]:
            # 1. ‡∏Ç‡∏¢‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏•‡∏á‡∏°‡∏≤
            obs.move(obs.x(), obs.y() + self.obstacle_speed)

            # 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏ï‡∏Å‡∏û‡πâ‡∏ô‡∏à‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô)
            if obs.y() > self.game_area.height():
                self.obstacles.remove(obs)
                obs.deleteLater()
                
                # 2.1 ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
                self.score += 1
                
                # 2.2 ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡πâ‡∏≤‡∏¢‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
                self.score_label.setText(f"‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {self.score}")
                
                # 2.3 ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ñ‡∏∂‡∏á 5, 10, 15, ...)
                if self.score > 0 and self.score % 5 == 0:
                    self.obstacle_speed += 2  
                    print(f"‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏õ! ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {self.score}, ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏´‡∏°‡πà: {self.obstacle_speed}")
                
            # 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏∑‡∏≠‡∏ä‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if self.boat.geometry().intersects(obs.geometry()):
                
                # 3.1 ‡∏•‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                self.obstacles.remove(obs)
                obs.deleteLater()
                
                # 3.2 ‡∏•‡∏î‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
                self.lives -= 1
                
                # 3.3 ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡πâ‡∏≤‡∏¢‡∏´‡∏±‡∏ß‡πÉ‡∏à
                self.heart_label.setText(f"‚ù§Ô∏è: {self.lives}")
                
                # 4. (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î) ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏û‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                if self.lives <= 0:
                    self.game_over() # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Game Over *‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠* ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏´‡∏°‡∏î
                    return # ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                # --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ---

            # --- ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏ô ---
            if self.boat.geometry().intersects(obs.geometry()):
                
                # 1. ‡∏•‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                self.obstacles.remove(obs)
                obs.deleteLater()
                
                # 2. ‡∏•‡∏î‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
                self.lives -= 1
                
                # 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡πâ‡∏≤‡∏¢‡∏´‡∏±‡∏ß‡πÉ‡∏à
                self.heart_label.setText(f"‚ù§Ô∏è: {self.lives}")
                
                # 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏û‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                if self.lives <= 0:
                    self.game_over()
                    return # ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                
                # ‡∏ñ‡πâ‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î ‡πÄ‡∏Å‡∏°‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥

            if self.boat.geometry().intersects(obs.geometry()):
                self.game_over()
                return
#--------------------------------------------------------------

    def spawn_obstacle(self):
        """‡∏™‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡πà‡∏≠‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏¥‡∏ô"""
        obstacle = QtWidgets.QLabel(self.game_area)
        obstacle.setFocusPolicy(QtCore.Qt.NoFocus)
        x = random.randint(0, self.game_area.width() - 80)

        # ‡∏™‡∏∏‡πà‡∏°‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏∞‡πÑ‡∏£
        if random.choice([True, False]):
            image_path = os.path.join(self.IMAGE_DIR, "log01.PNG")
        else:
            image_path = os.path.join(self.IMAGE_DIR, "rock01.PNG")

        obstacle.setPixmap(QtGui.QPixmap(image_path).scaled(80, 80, QtCore.Qt.KeepAspectRatio))
        obstacle.setGeometry(x, -80, 80, 70) # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡∏ô‡∏≠‡∏Å‡∏à‡∏≠

        obstacle.setStyleSheet("outline: none; border: none;")

        obstacle.show()
        self.obstacles.append(obstacle)

        #‡∏à‡∏ö‡πÄ‡∏Å‡∏°
    def game_over(self):
        self.game_timer.stop()
        self.spawn_timer.stop()

        msg = QtWidgets.QMessageBox(self)
        msg.setWindowTitle("üíÄ‡πÄ‡∏£‡∏∑‡∏≠‡∏ä‡∏ôüíÄ")
        msg.setText(" ‡πÅ‡∏û‡πâ‡πÅ‡∏á‡πâ‡∏ß‡∏Ñ‡∏±‡∏ö!")
        msg.exec_()
        
        # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        self.stacked_layout.setCurrentWidget(self.menu_widget)

#--------------------------------------------------------------

    def keyPressEvent(self, event):
        if not self.game_timer.isActive():
            return 

        if event.key() == QtCore.Qt.Key_Left:
            self.boat_x = max(0, self.boat_x - self.boat_speed)
        elif event.key() == QtCore.Qt.Key_Right:
            max_x = self.game_area.width() - self.boat.width()
            self.boat_x = min(max_x, self.boat_x + self.boat_speed)

        self.boat.move(self.boat_x, self.boat_y)

def main():
    try:
        global river_rush_ui_instance
        river_rush_ui_instance.close()
        river_rush_ui_instance.deleteLater()
    except:
        pass

    river_rush_ui_instance = RiverRushUI()
    river_rush_ui_instance.show()
    return river_rush_ui_instance